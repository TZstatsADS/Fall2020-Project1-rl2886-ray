knitr::opts_chunk$set(echo = TRUE)
library(haven)
library(tidyverse)
library(naniar)
library(labelled)
library(ggplot2)
pilot_data <- read_sav("/Users/raymondliang/Documents/GitHub/Fall2020-Project1-rl2886-ray/data/anes_pilot_2020ets_sav/anes_pilot_2020ets_sav.SAV")
any(is.na(pilot_data))
pilot_data %>%
gather(key = "key", value = "val") %>%
mutate(is.missing = is.na(val)) %>%
group_by(key, is.missing) %>%
summarise(num.missing = n()) %>%
filter(is.missing==T) %>%
select(-is.missing) %>%
arrange(desc(num.missing))
pilot_data_1<-pilot_data[-which(is.na(pilot_data$vidx)),]
vote_trump<-pilot_data_1[pilot_data_1$vote20jb==1,]
sum(vote_trump$pid1r==2)
demo_trump<-vote_trump[vote_trump$pid1r==2,]
# Age
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
ggplot(as.data.frame(2020-demo_trump$birthyr), aes(x=as.factor(2020-demo_trump$birthyr) )) +
geom_bar( )
median(2020-vote_trump$birthyr)
median(2020-demo_trump$birthyr)
sum((2020-demo_trump$birthyr)<50)/sum(vote_trump$pid1r==2)
sum((2020-vote_trump$birthyr)<50)/nrow(vote_trump)
#Gender
sum(demo_trump$sex==1)/sum(vote_trump$pid1r==2)
#Education
sum(demo_trump$educ>=5)/sum(vote_trump$pid1r==2)
#Children
sum(demo_trump$children>=1)/sum(vote_trump$pid1r==2)
#Ethnicity
asiant<-sum(demo_trump$race1_asian)
blackt<-sum(demo_trump$race1_black)
hpit<-sum(demo_trump$race1_hpi)
namert<-sum(demo_trump$race1_namer)
whitet<-sum(demo_trump$race1_white)
barplot(c(asiant,blackt,hpit,namert,whitet),names=c('asian','black','hpi','namer','white'))
whitet/sum(vote_trump$pid1r==2)
#income
colMeans(demo_trump[demo_trump$inc_anes!=66,"inc_anes"])
nrow(demo_trump[demo_trump$inc_anes!=66,"inc_anes"])/sum(vote_trump$pid1r==2)
#expert
ggplot(as.data.frame(demo_trump$experts), aes(x=as.factor(demo_trump$experts) )) +
geom_bar( )
sum(demo_trump$experts==3)/sum(vote_trump$pid1r==2)
ggplot(as.data.frame(demo_trump$science), aes(x=as.factor(demo_trump$science) )) +
geom_bar( )
#Eco
getmode(demo_trump$econpres7)
demo_trump$freemkt1a
demo_trump$freemkt1b
#covid
getmode(demo_trump$covidpres7[demo_trump$covidpres7!=88])
#conservative
mean(demo_trump$lcself)
sum(vote_trump$pid1r==2)/nrow(vote_trump)
sum(vote_trump$pid1r==2)/sum(pilot_data_1$pid1r==2)
mean(demo_trump$ftobama1)
mean(demo_trump$fttrump1)
mean(demo_trump$ftbiden1)
#Strong leader
mean(demo_trump$jbleader1[demo_trump$jbleader1!=88])
#Effective leader
mean(demo_trump$jbleader2[demo_trump$jbleader2!=77])
#Care about people
mean(demo_trump$jbcares[demo_trump$jbcares!=99])
#Dignified
mean(demo_trump$jbdignif[demo_trump$jbdignif!=99])
#Honest
mean(demo_trump$jbhonest[demo_trump$jbhonest!=99])
#Authentic
mean(demo_trump$jbauth[demo_trump$jbauth!=99])
#Divisive
mean(demo_trump$jbdiv[demo_trump$jbdiv!=99])
#Knowledgeable
mean(demo_trump$jbknow[demo_trump$jbknow!=99])
#most think Eco betteer than a year ago
getmode(demo_trump$econnow)
#Moderately worried financial situation
mean(demo_trump$finworry)
#Moderately worried - very national economy
mean(demo_trump$confecon)
#slightly less government
mean(demo_trump$govsize1a[demo_trump$govsize1a!=8])
#They think government regulation of business is good for society?
mean(demo_trump$regulate1[demo_trump$regulate1!=88])
mean(demo_trump$ineqinc1a)
#the way he handle
demo_trump$healthcarepres7
#the way he handle
demo_trump$healthcarepres7[demo_trump$healthcarepres7!=77]
#the way he handle
mean(demo_trump$healthcarepres7[demo_trump$healthcarepres7!=77])
demo_trump$hlthcare1
mean(demo_trump$hlthcare1)
getmode(demo_trump$hlthcare1)
demo_trump$hlthcare2
mean(demo_trump$hlthcare2)
demo_trump$covid2
mean(demo_trump$covid2)
demo_trump$covid1
demo_trump$covid1[demo_trump$covid1!=9]
mean(demo_trump$covid1[demo_trump$covid1!=9])
#
demo_trump$covid_elect
# They are not concerned about being able to pay health care expenses for you and your family in the next year
mean(demo_trump$hlthcare2)
#
mean(demo_trump$covid_elect[demo_trump$covid_elect!=9])
emo_trump$covid_elect
demo_trump$covid_elect
demo_trump$covid_elect
#
mean(demo_trump$covid_elect[demo_trump$covid_elect!=9])
demo_trump$exhelp
demo_trump$exphelp
mean(demo_trump$exphelp)
#
demo_trump$frnpres7
#
mean(demo_trump$frnpres7)
mean(demo_trump$covidpres7[demo_trump$covidpres7!=77])
demo_trump$covidpres7
mean(demo_trump$covidpres7[demo_trump$covidpres7!=88])
# Load data
setwd("/Users/raymondliang/Documents/GitHub/Fall2020-Project1-rl2886-ray")
?setwd
getwd
getwd()
# Load data
setwd(/Users/raymondliang/Documents/GitHub/Fall2020-Project1-rl2886-ray)
# Load data
setwd(Users/raymondliang/Documents/GitHub/Fall2020-Project1-rl2886-ray)
# Load data
setwd("Documents/GitHub/Fall2020-Project1-rl2886-ray")
# Load data
setwd("/Documents/GitHub/Fall2020-Project1-rl2886-ray")
library(haven)
library(tidyverse)
library(naniar)
library(labelled)
library(ggplot2)
# Load data
setwd("/Documents/GitHub/Fall2020-Project1-rl2886-ray")
# Load data
setwd(" Documents/GitHub/Fall2020-Project1-rl2886-ray")
# Load data
setwd(" Documents/GitHub/Fall2020-Project1-rl2886-ray/")
# Load data
setwd("Documents")
getwd()
setwd("/Users/raymondliang/Documents/GitHub/Fall2020-Project1-rl2886-ray/")
getwd()
# Load data
setwd("/Users/raymondliang/Documents/GitHub/Fall2020-Project1-rl2886-ray/")
pilot_data <- read_sav("data/anes_pilot_2020ets_sav/anes_pilot_2020ets_sav.SAV")
getwd()
pilot_data <- read_sav("data/anes_pilot_2020ets_sav/anes_pilot_2020ets_sav.SAV")
pilot_data <- read_sav("data/anes_pilot_2020ets_sav/anes_pilot_2020ets_sav.SAV")
# Load data
setwd("/Users/raymondliang/Documents/GitHub/Fall2020-Project1-rl2886-ray/")
pilot_data <- read_sav("data/anes_pilot_2020ets_sav/anes_pilot_2020ets_sav.SAV")
knitr::opts_chunk$set(echo = TRUE)
library(haven)
library(tidyverse)
library(naniar)
library(labelled)
library(ggplot2)
# Load data
setwd("/Users/raymondliang/Documents/GitHub/Fall2020-Project1-rl2886-ray/")
pilot_data <- read_sav("data/anes_pilot_2020ets_sav/anes_pilot_2020ets_sav.SAV")
# Missing data checking
#Column vidx has two missing data.Vidx it's the question about 'dose R know State Voter ID law?',therefore to be fair, I would eliminate this two rows of data.
any(is.na(pilot_data))
pilot_data %>%
gather(key = "key", value = "val") %>%
mutate(is.missing = is.na(val)) %>%
group_by(key, is.missing) %>%
summarise(num.missing = n()) %>%
filter(is.missing==T) %>%
select(-is.missing) %>%
arrange(desc(num.missing))
pilot_data_1<-pilot_data[-which(is.na(pilot_data$vidx)),]
# Missing data checking
#Column vidx has two missing data.Vidx it's the question about 'dose R know State Voter ID law?',therefore to be fair, I would eliminate this two rows of data.
any(is.na(pilot_data))
pilot_data %>%
gather(key = "key", value = "val") %>%
mutate(is.missing = is.na(val)) %>%
group_by(key, is.missing) %>%
summarise(num.missing = n()) %>%
filter(is.missing==T) %>%
select(-is.missing) %>%
arrange(desc(num.missing))
pilot_data_1<-pilot_data[-which(is.na(pilot_data$vidx)),]
# Missing data checking
#Column vidx has two missing data.Vidx it's the question about 'dose R know State Voter ID law?',therefore to be fair, I would eliminate this two rows of data.
any(is.na(pilot_data))
pilot_data %>%
gather(key = "key", value = "val") %>%
mutate(is.missing = is.na(val)) %>%
group_by(key, is.missing) %>%
summarise(num.missing = n()) %>%
filter(is.missing==T) %>%
select(-is.missing) %>%
arrange(desc(num.missing))
pilot_data_1<-pilot_data[-which(is.na(pilot_data$vidx)),]
library(haven)
library(tidyverse)
library(naniar)
library(labelled)
library(ggplot2)
# Load data
setwd("/Users/raymondliang/Documents/GitHub/Fall2020-Project1-rl2886-ray/")
pilot_data <- read_sav("data/anes_pilot_2020ets_sav/anes_pilot_2020ets_sav.SAV")
library(haven)
library(tidyverse)
library(naniar)
library(labelled)
library(ggplot2)
# Load data
setwd("/Users/raymondliang/Documents/GitHub/Fall2020-Project1-rl2886-ray/")
pilot_data <- read_sav("data/anes_pilot_2020ets_sav/anes_pilot_2020ets_sav.SAV")
# Missing data checking
#Column vidx has two missing data.Vidx it's the question about 'dose R know State Voter ID law?',therefore to be fair, I would eliminate this two rows of data.
any(is.na(pilot_data))
pilot_data %>%
gather(key = "key", value = "val") %>%
mutate(is.missing = is.na(val)) %>%
group_by(key, is.missing) %>%
summarise(num.missing = n()) %>%
filter(is.missing==T) %>%
select(-is.missing) %>%
arrange(desc(num.missing))
pilot_data_1<-pilot_data[-which(is.na(pilot_data$vidx)),]
getwd()
![an image caption Source: democrats for trump.](Fall2020-Project1-rl2886-ray/figs/demo_trump2020.2.jpg)
getwd()
sum(vote_trump$pid1r==2)/nrow(vote_trump)
vote_trump<-pilot_data_1[pilot_data_1$vote20jb==1,]
sum(vote_trump$pid1r==2)
demo_trump<-vote_trump[vote_trump$pid1r==2,]
sum(vote_trump$pid1r==2)/nrow(vote_trump)
sum(vote_trump$pid1r==2)/sum(pilot_data_1$pid1r==2)
## image root problem
<img src="../figs/demo_trump2020.2.jpg" width="150">
![an image caption Source: democrats for trump.](/Users/raymondliang/Documents/GitHub/Fall2020-Project1-rl2886-ray/figs/)
sum(vote_trump$pid1r==2)/sum(pilot_data_1$pid1r==2)
sum(vote_trump$pid1r==2)/nrow(vote_trump)
install.packages("waffle")
library(waffle)
sum(vote_trump$pid1r==2)/nrow(vote_trump)
ggplot(data = demo_trump_wo,
aes(fill = identity, values = dt_percentage)) +
geom_waffle(n_rows = 10, size = 0.5, colour = "#ffffff",      flip = TRUE) +
scale_fill_manual(values = c("#f59cbf","#00daff")) +
coord_equal() +
theme_minimal() +
theme_enhance_waffle() +
labs(title = "% Male & Female - Survey Respondents ",
subtitle = "Hackerrank Developer Survey 2018",
caption = "Plot made using `waffle` - R package")
demo_trump_wo <- data.frame(
identity = c("Democrats","Others"),
dt_percentage = c(sum(vote_trump$pid1r==2),nrow(vote_trump)),
stringsAsFactors = FALSE)
ggplot(data = demo_trump_wo,
aes(fill = identity, values = dt_percentage)) +
geom_waffle(n_rows = 10, size = 0.5, colour = "#ffffff",      flip = TRUE) +
scale_fill_manual(values = c("#f59cbf","#00daff")) +
coord_equal() +
theme_minimal() +
theme_enhance_waffle() +
labs(title = "% Male & Female - Survey Respondents ",
subtitle = "Hackerrank Developer Survey 2018",
caption = "Plot made using `waffle` - R package")
library(haven)
library(tidyverse)
library(naniar)
library(labelled)
library(ggplot2)
library(waffle)
ggplot(data = demo_trump_wo,
aes(fill = identity, values = dt_percentage)) +
geom_waffle(n_rows = 10, size = 0.5, colour = "#ffffff",      flip = TRUE) +
scale_fill_manual(values = c("#f59cbf","#00daff")) +
coord_equal() +
theme_minimal() +
theme_enhance_waffle() +
labs(title = "% Male & Female - Survey Respondents ",
subtitle = "Hackerrank Developer Survey 2018",
caption = "Plot made using `waffle` - R package")
?geom_waffle
knitr::opts_chunk$set(echo = TRUE)
library(haven)
library(tidyverse)
library(naniar)
library(labelled)
library(ggplot2)
library(waffle)
library(haven)
library(tidyverse)
library(naniar)
library(labelled)
library(ggplot2)
library(waffle)
library(haven)
library(tidyverse)
library(naniar)
library(labelled)
library(ggplot2)
library(waffle)
# Load data
setwd("/Users/raymondliang/Documents/GitHub/Fall2020-Project1-rl2886-ray/")
pilot_data <- read_sav("data/anes_pilot_2020ets_sav/anes_pilot_2020ets_sav.SAV")
# Missing data checking
#Column vidx has two missing data.Vidx it's the question about 'dose R know State Voter ID law?',therefore to be fair, I would eliminate this two rows of data.
any(is.na(pilot_data))
pilot_data %>%
gather(key = "key", value = "val") %>%
mutate(is.missing = is.na(val)) %>%
group_by(key, is.missing) %>%
summarise(num.missing = n()) %>%
filter(is.missing==T) %>%
select(-is.missing) %>%
arrange(desc(num.missing))
pilot_data_1<-pilot_data[-which(is.na(pilot_data$vidx)),]
vote_trump<-pilot_data_1[pilot_data_1$vote20jb==1,]
sum(vote_trump$pid1r==2)
demo_trump<-vote_trump[vote_trump$pid1r==2,]
sum(vote_trump$pid1r==2)/nrow(vote_trump)
sum(vote_trump$pid1r==2)/sum(pilot_data_1$pid1r==2)
demo_trump_wo <- data.frame(
identity = c("Democrats","Others"),
dt_percentage = c(sum(vote_trump$pid1r==2),nrow(vote_trump)),
stringsAsFactors = FALSE)
ggplot(data = demo_trump_wo,
aes(fill = identity, values = dt_percentage)) +
geom_waffle(n_rows = 10, size = 0.5, colour = "#ffffff",      flip = TRUE) +
scale_fill_manual(values = c("#f59cbf","#00daff")) +
coord_equal() +
theme_minimal() +
theme_enhance_waffle() +
labs(title = "% Male & Female - Survey Respondents ",
subtitle = "Hackerrank Developer Survey 2018",
caption = "Plot made using `waffle` - R package")
install.packages("ggwaffle")
install.packages("remotes")
remotes::install_github("liamgilbey/ggwaffle")
?ggwaffle
ggwaffle()
library(ggwaffle)
library(ggwaffle)
library(ggwaffle)
ggplot(data = demo_trump_wo,
aes(fill = identity, values = dt_percentage)) +
geom_waffle(n_rows = 10, size = 0.5, colour = "#ffffff",      flip = TRUE) +
scale_fill_manual(values = c("#f59cbf","#00daff")) +
coord_equal() +
theme_minimal() +
theme_enhance_waffle() +
labs(title = "% Male & Female - Survey Respondents ",
subtitle = "Hackerrank Developer Survey 2018",
caption = "Plot made using `waffle` - R package")
?geom_waffle
ggplot(data = demo_trump_wo,
aes(fill = identity, values = dt_percentage)) +
geom_waffle(colour = "#ffffff",flip = TRUE) +
scale_fill_manual(values = c("#f59cbf","#00daff")) +
coord_equal() +
theme_minimal() +
theme_enhance_waffle() +
labs(title = "% Male & Female - Survey Respondents ",
subtitle = "Hackerrank Developer Survey 2018",
caption = "Plot made using `waffle` - R package")
ggplot(data = demo_trump_wo,
aes(fill = identity, values = dt_percentage)) +
geom_waffle() +
scale_fill_manual(values = c("#f59cbf","#00daff")) +
coord_equal() +
theme_minimal() +
theme_enhance_waffle() +
labs(title = "% Male & Female - Survey Respondents ",
subtitle = "Hackerrank Developer Survey 2018",
caption = "Plot made using `waffle` - R package")
ggplot(data = demo_trump_wo,
aes(fill = identity, values = dt_percentage)) +
geom_waffle(n_rows = 10, size = 0.5, colour = "#ffffff",flip = TRUE) +
scale_fill_manual(values = c("#f59cbf","#00daff")) +
coord_equal() +
theme_minimal() +
theme_enhance_waffle() +
labs(title = "% Male & Female - Survey Respondents ",
subtitle = "Hackerrank Developer Survey 2018",
caption = "Plot made using `waffle` - R package")
ggplot(data = demo_trump_wo,
aes(fill = identity, values = dt_percentage)) +
geom_waffle(n_rows = 10, size = 0.5, colour = "#ffffff",flip = TRUE) +
scale_fill_manual(values = c("#f59cbf","#00daff")) +
coord_equal() +
labs(title = "% Male & Female - Survey Respondents ",
subtitle = "Hackerrank Developer Survey 2018",
caption = "Plot made using `waffle` - R package")
install.packages("emojifont")
search("")
search_emoji('democratic')
library(emojifont)
search_emoji('democratic')
search_emoji('biden')
search_emoji('smile')
search_emoji('vote')
search_emoji('republican')
iris$Species
?waffle_iron
iris
demo_trump_wo
2020demo_trump<-rep("Democrats",sum(vote_trump$pid1r==2))
2020demo_trump <- rep("Democrats",sum(vote_trump$pid1r==2))
2020demotrump <- rep("Democrats",sum(vote_trump$pid1r==2))
2020demotrump<- rep("Democrats",sum(vote_trump$pid1r==2))
20demotrump<- rep("Democrats",sum(vote_trump$pid1r==2))
rep("Democrats",sum(vote_trump$pid1r==2))
demotrump <- rep("Democrats",sum(vote_trump$pid1r==2))
trump<-rep("Others",nrow(vote_trump)-sum(vote_trump$pid1r==2))
iris$Species <- as.character(iris$Species)
waffle_data <- waffle_iron(iris, aes_d(group = Species))
waffle_data
iris$Species
c(demotrump,trump)
a$d <- as.character(c(demotrump,trump))
demo_trump_wo <- data.frame(
stringsAsFactors = FALSE)
demo_trump_wo
demo_trump_wo$d <- as.character(c(demotrump,trump))
demo_trump_wo <- data.frame(
identity = c(demotrump,trump)
stringsAsFactors = FALSE)
demo_trump_wo <- data.frame(
identity = c(demotrump,trump),
stringsAsFactors = FALSE)
demo_trump_wo <- data.frame(
identity = c(demotrump,trump),
stringsAsFactors = FALSE)
demo_trump_wo$d <- as.character(c(demotrump,trump))
demo_trump_wo
waffle_data <- waffle_iron(demo_trump_wo, aes_d(group = identity))
ggplot(waffle_data, aes(x, y, fill = group)) +
geom_waffle() +
coord_equal() +
scale_fill_waffle() +
theme_waffle()
waffle_data
ggplot(waffle_data, aes(x, y, fill = group)) +
geom_waffle()
ggplot(waffle_data, aes(x, y, fill = group)) +
geom_waffle() +
coord_equal()
class(iris$Species)
waffle_data <- waffle_iron(demo_trump_wo, aes_d(group = d))
ggplot(waffle_data, aes(x, y, fill = group)) +
geom_waffle() +
coord_equal() +
scale_fill_waffle() +
theme_waffle()
ggplot(waffle_data, aes(x, y, fill = group))
waffle_data$group
waffle_data$x
waffle_data$y
length(demotrump)
length(trump)
View(waffle_data)
install.packages("hrbrthemes")
library(hrbrthemes)
library(waffle)
demo_trump_wo
demo_trump_wo <- data.frame(
identity = c(demotrump,trump),
stringsAsFactors = FALSE)
demo_trump_wo
nrow(vote_trump)
demo_trump_wo <- data.frame(
identity = c("Male","Female"),
dt_percentage = c(sum(vote_trump$pid1r==2),nrow(vote_trump)-sum(vote_trump$pid1r==2)),
stringsAsFactors = FALSE)
ggplot(data = demo_trump_wo,
aes(fill = identity, values = dt_percentage)) +
geom_waffle(n_rows = 10, size = 0.5, colour = "#ffffff",      flip = TRUE) +
scale_fill_manual(values = c("#f59cbf","#00daff")) +
coord_equal() +
theme_minimal() +
theme_enhance_waffle() +
labs(title = "% Male & Female - Survey Respondents ",
subtitle = "Hackerrank Developer Survey 2018",
caption = "Plot made using `waffle` - R package")
ggplot(data = demo_trump_wo,
aes(fill = identity, values = dt_percentage)) +
geom_waffle(n_rows = 10, size = 0.5, colour = "#ffffff",      flip = TRUE) +
scale_fill_manual(values = c("#f59cbf","#00daff")) +
coord_equal() +
theme_minimal()  +
labs(title = "% Male & Female - Survey Respondents ",
subtitle = "Hackerrank Developer Survey 2018",
caption = "Plot made using `waffle` - R package")
?gegeom_waffle
?geom_waffle
