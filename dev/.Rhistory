getmode(demo_trump$govsize1a[demo_trump$govsize1a!=8])
#They think government regulation of business is good for society?
getmode(demo_trump$regulate1[demo_trump$regulate1!=88])
#Approve the way Donald Trump is handling relations with foreign countries
mean(demo_trump$frnpres7)
demo_trump$frnpres7
demo_trump$apppres7
#Trump Job Approval
#Job approval
mean(demo_trump$apppres7)
View(demo_trump)
#covid
mean(demo_trump$covidpres7[demo_trump$covidpres7!=88])
#Trump Job Approval
#Job approval
mean(demo_trump$apppres7)
#Amongst those who respond, they are satisfy with the way Trump handle the health care
mean(demo_trump$healthcarepres7[demo_trump$healthcarepres7!=77])
#Approve the way he handle covid
mean(demo_trump$covidpres7[demo_trump$covidpres7!=88])
#Approve the way Donald Trump is handling relations with foreign countries
mean(demo_trump$frnpres7)
library(DT)
class(iris)
demo_trump$freemkt1a[demo_trump$freemkt1a!=8]
#Attitude towards free market
getmode(demo_trump$freemkt1a[demo_trump$freemkt1a!=8])
getmode(demo_trump$freemkt1b[demo_trump$freemkt1b!=8])
#slightly less government
getmode(demo_trump$govsize1a[demo_trump$govsize1a!=8])
emo_trump$govsize1a
demo_trump$freemkt1b
demo_trump$govsize1a
freemarket<-data.frame(
Feature = c("Most people attitude towards free market","How strong do they want free market","Most people attitude towards less government regulation"),
Percentage=c(af1,af2,lg))
#Attitude towards free market
af1<-getmode(demo_trump$freemkt1a[demo_trump$freemkt1a!=8])
af2<-getmode(demo_trump$freemkt1b[demo_trump$freemkt1b!=8])
#slightly less government
lg<-getmode(demo_trump$govsize1a[demo_trump$govsize1a!=8])
freemarket<-data.frame(
Feature = c("Most people attitude towards free market","How strong do they want free market","Most people attitude towards less government regulation"),
Percentage=c(af1,af2,lg))
freemarket
datatable(Feature, options = list(pageLength = 3))
datatable(freemarket, options = list(pageLength = 3))
freemarket<-data.frame(
Feature = c("Most people attitude towards free market","How strong do they want free market","Most people attitude towards less government regulation"),
Score=c(af1,af2,lg))
datatable(freemarket, options = list(pageLength = 3))
demo_trump$apppres7
#Trump Job Approval
#Job approval
js<-mean(demo_trump$apppres7)
#Amongst those who respond, they are satisfy with the way Trump handle the health care
hs<-mean(demo_trump$healthcarepres7[demo_trump$healthcarepres7!=77])
#Approve the way he handle covid
cs<-mean(demo_trump$covidpres7[demo_trump$covidpres7!=88])
#Approve the way Donald Trump is handling relations with foreign countries
fs<-mean(demo_trump$frnpres7)
trump_performance<-data.frame(
Feature = c("Approval towards Trump's job overall performance","Approval towards Trump's health care job performance","Approval towards Trump's covid job performance","Approval towards Trump's foreign relations job performance"),
Score=c(js,hs,cs,fs))
datatable(trump_performance, options = list(pageLength = 4))
mean(demo_trump$ftbiden1)
#Strong leader
mean(demo_trump$jbleader1[demo_trump$jbleader1!=88])
#Effective leader
mean(demo_trump$jbleader2[demo_trump$jbleader2!=77])
#Care about people
mean(demo_trump$jbcares[demo_trump$jbcares!=99])
#Dignified
mean(demo_trump$jbdignif[demo_trump$jbdignif!=99])
#Honest
mean(demo_trump$jbhonest[demo_trump$jbhonest!=99])
#Authentic
mean(demo_trump$jbauth[demo_trump$jbauth!=99])
#Divisive
mean(demo_trump$jbdiv[demo_trump$jbdiv!=99])
#Knowledgeable
mean(demo_trump$jbknow[demo_trump$jbknow!=99])
comparisona<-data.frame(
Feature = c("Attitude towards Biden","Attitude towards Trump"),
Feeling=round(c(mean(demo_trump$ftbiden1),mean(demo_trump$fttrump1)),2))
ggplot(comparisona,aes(x=Feature,y=Feeling, fill=as.factor(Feature))) +
geom_bar(stat = "identity",width=0.8)+
coord_flip()+
scale_fill_hue(c = 40)+
theme(legend.position="none")+
geom_text(aes(label = Feeling))+
xlab("")
#Age
#median(2020-vote_trump$birthyr)
#median(2020-demo_trump$birthyr)
#sum((2020-demo_trump$birthyr)<50)/sum(vote_trump$pid1r==2)
#sum((2020-vote_trump$birthyr)<50)/nrow(vote_trump)
demo_trump_age = data.frame(age=2020-demo_trump$birthyr)
all_trump_age = data.frame(age=2020-vote_trump$birthyr)
ggplot() +
aes(x = age) +
geom_histogram(data = demo_trump_age, fill = "blue",bins = 50) +
geom_histogram(data = all_trump_age, fill = "pink",binwidth = 0.5)
#Gender
gender<-sum(demo_trump$sex==1)/sum(vote_trump$pid1r==2)
#Education
education<-sum(demo_trump$educ>=5)/sum(vote_trump$pid1r==2)
#Children
children<-sum(demo_trump$children>=1)/sum(vote_trump$pid1r==2)
#Ethnicity
whitet<-sum(demo_trump$race1_white)
white_prop<-whitet/sum(vote_trump$pid1r==2)
demographic<-data.frame(
Feature = c("Gender","Education","Children","White_prop"),
Percentage=round(c(gender,education,children,white_prop),2))
ggplot(demographic,aes(x=Feature,y=Percentage, fill=as.factor(Feature))) +
geom_bar(stat = "identity",width=0.8)+
coord_flip()+
scale_fill_hue(c = 40)+
theme(legend.position="none")+
geom_text(aes(label = Percentage), vjust=0)
#income
#nrow(demo_trump[demo_trump$inc_anes!=66,"inc_anes"])/sum(vote_trump$pid1r==2)
#colMeans(demo_trump[demo_trump$inc_anes!=66,"inc_anes"])
income_dis<-demo_trump[demo_trump$inc_anes!=66,"inc_anes"]
ggplot(income_dis, aes(x=inc_anes)) +
geom_histogram(binwidth=3, fill="#69b3a2", color="#e9ecef", alpha=0.9)+
geom_vline(xintercept=14.7,  color='darkblue')+
geom_text(mapping = aes(x = 15,
y = 8,
label = 'Median household income in 2019'), colour="darkblue", angle=270)+
geom_vline(xintercept=16.725 ,  color="darkgreen")+
geom_text(mapping = aes(x = 17 ,
y = 8,
label = 'Median household income for the data'), colour="darkgreen", angle=270)+
labs(x = "Annual Family Income for 2020 Democratic Trump Voters",y="")
#expert
ggplot(as.data.frame(demo_trump$experts),
aes(x=as.factor(demo_trump$experts), fill=as.factor(demo_trump$experts) )) +
geom_bar( )+
scale_fill_brewer() +
labs(x = "The lower the number, the more they trust ordinary citizens",y="Number of people")+
theme(legend.position="none")
knitr::opts_chunk$set(echo = TRUE)
ggplot() +
aes(x = age) +
geom_histogram(data = demo_trump_age, fill = "blue",bins = 50) +
geom_histogram(data = all_trump_age, fill = "pink",binwidth = 0.5)+
guide_legend(label = TRUE)
library(haven)
library(tidyverse)
library(naniar)
library(labelled)
library(ggplot2)
library(hrbrthemes)
library(waffle)
library(DT)
# Load data
setwd("/Users/raymondliang/Documents/GitHub/Fall2020-Project1-rl2886-ray/")
pilot_data <- read_sav("data/anes_pilot_2020ets_sav/anes_pilot_2020ets_sav.SAV")
#Help function:Statistical mode
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
# Missing data checking
#Column vidx has two missing data.Vidx it's the question about 'dose R know State Voter ID law?',therefore to be fair, I would eliminate this two rows of data.
any(is.na(pilot_data))
pilot_data_1<-pilot_data[-which(is.na(pilot_data$vidx)),]
vote_trump<-pilot_data_1[pilot_data_1$vote20jb==1,]
#sum(vote_trump$pid1r==2)
demo_trump<-vote_trump[vote_trump$pid1r==2,]
#sum(vote_trump$pid1r==2)/nrow(vote_trump)
#sum(vote_trump$pid1r==2)/sum(pilot_data_1$pid1r==2)
#demotrump <- rep("Democrats",sum(vote_trump$pid1r==2))
#trump<-rep("Others",nrow(vote_trump)-sum(vote_trump$pid1r==2))
parts1 <- c(10,90)
parts2 <- c(9,91)
w1<-waffle(parts1,rows=5,colors=c("light blue","red"),title =c("10% of Democrats vote for Trump"))
w2<-waffle(parts2,rows=5,colors=c("red","blue"),title =c("9% of Trump's voters come for Democrats"))
iron(w1,w2)
#Age
#median(2020-vote_trump$birthyr)
#median(2020-demo_trump$birthyr)
#sum((2020-demo_trump$birthyr)<50)/sum(vote_trump$pid1r==2)
#sum((2020-vote_trump$birthyr)<50)/nrow(vote_trump)
demo_trump_age = data.frame(age=2020-demo_trump$birthyr)
all_trump_age = data.frame(age=2020-vote_trump$birthyr)
ggplot() +
aes(x = age) +
geom_histogram(data = demo_trump_age, fill = "blue",bins = 50) +
geom_histogram(data = all_trump_age, fill = "pink",binwidth = 0.5)+
guide_legend(label = TRUE)
ggplot() +
aes(x = age) +
geom_histogram(data = demo_trump_age, fill = "blue",bins = 50) +
geom_histogram(data = all_trump_age, fill = "pink",binwidth = 0.5)+
guides(colour = guide_legend(override.aes = list(alpha = 1)))
ggplot() +
aes(x = age) +
geom_histogram(data = demo_trump_age, fill = "blue",bins = 50,label="demo_trump_age") +
geom_histogram(data = all_trump_age, fill = "pink",binwidth = 0.5)
geom_histogram()
?geom_histogram()
ggplot() +
aes(x = age) +
geom_histogram(data = demo_trump_age, fill = "blue",bins = 50,show.legend = T) +
geom_histogram(data = all_trump_age, fill = "pink",binwidth = 0.5)
#Education
edu_bachelor<-sum(demo_trump$educ>=5)/sum(vote_trump$pid1r==2)
#Age
#median(2020-vote_trump$birthyr)
#median(2020-demo_trump$birthyr)
#sum((2020-demo_trump$birthyr)<50)/sum(vote_trump$pid1r==2)
#sum((2020-vote_trump$birthyr)<50)/nrow(vote_trump)
demo_trump_age = data.frame(age=2020-demo_trump$birthyr)
all_trump_age = data.frame(age=2020-vote_trump$birthyr)
ggplot() +
aes(x = age) +
geom_histogram(data = demo_trump_age, fill = "blue",bins = 50,show.legend = T) +
geom_histogram(data = all_trump_age, fill = "pink",binwidth = 0.5)
#Gender
male<-sum(demo_trump$sex==1)/sum(vote_trump$pid1r==2)
#Education
edu_bachelor<-sum(demo_trump$educ>=5)/sum(vote_trump$pid1r==2)
#Children
at_least_one_child<-sum(demo_trump$children>=1)/sum(vote_trump$pid1r==2)
#Ethnicity
whitet<-sum(demo_trump$race1_white)
white_prop<-whitet/sum(vote_trump$pid1r==2)
demographic<-data.frame(
Feature = c("Male","Edu_bachelor","At_least_one_child","White_prop"),
Percentage=round(c(male,edu_bachelor,at_least_one_child,white_prop),2))
ggplot(demographic,aes(x=Feature,y=Percentage, fill=as.factor(Feature))) +
geom_bar(stat = "identity",width=0.8)+
coord_flip()+
scale_fill_hue(c = 40)+
theme(legend.position="none")+
geom_text(aes(label = Percentage), vjust=0)
#income
#nrow(demo_trump[demo_trump$inc_anes!=66,"inc_anes"])/sum(vote_trump$pid1r==2)
#colMeans(demo_trump[demo_trump$inc_anes!=66,"inc_anes"])
income_dis<-demo_trump[demo_trump$inc_anes!=66,"inc_anes"]
ggplot(income_dis, aes(x=inc_anes)) +
geom_histogram(binwidth=3, fill="#69b3a2", color="#e9ecef", alpha=0.9)+
geom_vline(xintercept=14.7,  color='darkblue')+
geom_text(mapping = aes(x = 15,
y = 8,
label = 'Median household income in 2019'), colour="darkblue", angle=270)+
geom_vline(xintercept=16.725 ,  color="darkgreen")+
geom_text(mapping = aes(x = 17 ,
y = 8,
label = 'Median household income for the data'), colour="darkgreen", angle=270)+
labs(x = "Annual Family Income for 2020 Democratic Trump Voters",y="")
#expert
ggplot(as.data.frame(demo_trump$experts),
aes(x=as.factor(demo_trump$experts), fill=as.factor(demo_trump$experts) )) +
geom_bar( )+
scale_fill_brewer() +
labs(x = "The lower the number, the more they trust ordinary citizens",y="Number of people")+
theme(legend.position="none")
#Age
#median(2020-vote_trump$birthyr)
#median(2020-demo_trump$birthyr)
#sum((2020-demo_trump$birthyr)<50)/sum(vote_trump$pid1r==2)
#sum((2020-vote_trump$birthyr)<50)/nrow(vote_trump)
demo_trump_age = data.frame(age=2020-demo_trump$birthyr)
all_trump_age = data.frame(age=2020-vote_trump$birthyr)
ggplot() +
aes(x = age) +
geom_histogram(data = demo_trump_age, fill = "blue",bins = 50,show.legend = T) +
geom_histogram(data = all_trump_age, fill = "pink",binwidth = 0.5)
#Gender
male<-sum(demo_trump$sex==1)/sum(vote_trump$pid1r==2)
#Education
edu_bachelor<-sum(demo_trump$educ>=5)/sum(vote_trump$pid1r==2)
#Children
at_least_one_child<-sum(demo_trump$children>=1)/sum(vote_trump$pid1r==2)
#Ethnicity
whitet<-sum(demo_trump$race1_white)
white_prop<-whitet/sum(vote_trump$pid1r==2)
demographic<-data.frame(
Feature = c("Male","Edu_bachelor","At_least_one_child","White_prop"),
Percentage=round(c(male,edu_bachelor,at_least_one_child,white_prop),2))
ggplot(demographic,aes(x=Feature,y=Percentage, fill=as.factor(Feature))) +
geom_bar(stat = "identity",width=0.8)+
coord_flip()+
scale_fill_hue(c = 40)+
theme(legend.position="none")+
geom_text(aes(label = Percentage), vjust=0)
#income
#nrow(demo_trump[demo_trump$inc_anes!=66,"inc_anes"])/sum(vote_trump$pid1r==2)
#colMeans(demo_trump[demo_trump$inc_anes!=66,"inc_anes"])
income_dis<-demo_trump[demo_trump$inc_anes!=66,"inc_anes"]
ggplot(income_dis, aes(x=inc_anes)) +
geom_histogram(binwidth=3, fill="#69b3a2", color="#e9ecef", alpha=0.9)+
geom_vline(xintercept=14.7,  color='darkblue')+
geom_text(mapping = aes(x = 15,
y = 8,
label = 'Median household income in 2019'), colour="darkblue", angle=270)+
geom_vline(xintercept=16.725 ,  color="darkgreen")+
geom_text(mapping = aes(x = 17 ,
y = 8,
label = 'Median household income for the data'), colour="darkgreen", angle=270)+
labs(x = "Annual Family Income for 2020 Democratic Trump Voters",y="")
#expert
ggplot(as.data.frame(demo_trump$experts),
aes(x=as.factor(demo_trump$experts), fill=as.factor(demo_trump$experts) )) +
geom_bar( )+
scale_fill_brewer() +
labs(x = "The lower the number, the more they trust ordinary citizens",y="Number of people")+
theme(legend.position="none")
ggplot(income_dis, aes(x=inc_anes)) +
geom_histogram(binwidth=3, fill="#69b3a2", color="#e9ecef", alpha=0.9)+
geom_vline(xintercept=14.7,  color='darkblue')+
geom_text(mapping = aes(x = 15,
y = 8,
label = 'Median household income in 2019'), colour="darkblue", angle=270)+
geom_vline(xintercept=16.725 ,  color="darkgreen")+
geom_text(mapping = aes(x = 17 ,
y = 8,
label = 'Median household income for the data'), colour="darkgreen", angle=270)+
labs(title  = "Annual Family Income for 2020 Democratic Trump Voters",x="The higher the number, the wealthier",y="")
ggplot(income_dis, aes(x=inc_anes)) +
geom_histogram(binwidth=3, fill="#69b3a2", color="#e9ecef", alpha=0.9)+
geom_vline(xintercept=14.7,  color='darkblue')+
geom_text(mapping = aes(x = 15,
y = 8,
label = 'Median household income in 2019'), colour="darkblue", angle=270)+
geom_vline(xintercept=16.725 ,  color="darkgreen")+
geom_text(mapping = aes(x = 17 ,
y = 8,
label = 'Median household income for the data'), colour="darkgreen", angle=270)+
labs(title  = "Annual Family Income for 2020 Democratic Trump Voters",x="The higher the number, the wealthier",y="")
income_dis
inc_anes
income_dis$inc_anes
class(income_dis)
income_dis<-as.data.frame(income_dis)
class(income_dis)
#income
#nrow(demo_trump[demo_trump$inc_anes!=66,"inc_anes"])/sum(vote_trump$pid1r==2)
#colMeans(demo_trump[demo_trump$inc_anes!=66,"inc_anes"])
income_dis<-demo_trump[demo_trump$inc_anes!=66,"inc_anes"]
income_dis<-as.data.frame(income_dis)
ggplot(income_dis, aes(x=inc_anes)) +
geom_histogram(binwidth=3, fill="#69b3a2", color="#e9ecef", alpha=0.9)+
geom_vline(xintercept=14.7,  color='darkblue')+
geom_text(mapping = aes(x = 15,
y = 8,
label = 'Median household income in 2019'), colour="darkblue", angle=270)+
geom_vline(xintercept=16.725 ,  color="darkgreen")+
geom_text(mapping = aes(x = 17 ,
y = 8,
label = 'Median household income for the data'), colour="darkgreen", angle=270)+
labs(title  = "Annual Family Income for 2020 Democratic Trump Voters",x="The higher the number, the wealthier",y="")
income_dis$inc_anes
inc_anes<-income_dis$inc_anes
inc_anes<-as.list(income_dis$inc_anes)
#income
#nrow(demo_trump[demo_trump$inc_anes!=66,"inc_anes"])/sum(vote_trump$pid1r==2)
#colMeans(demo_trump[demo_trump$inc_anes!=66,"inc_anes"])
income_dis<-demo_trump[demo_trump$inc_anes!=66,"inc_anes"]
ggplot(income_dis, aes(x=inc_anes)) +
geom_histogram(binwidth=3, fill="#69b3a2", color="#e9ecef", alpha=0.9)+
geom_vline(xintercept=14.7,  color='darkblue')+
geom_text(mapping = aes(x = 15,
y = 8,
label = 'Median household income in 2019'), colour="darkblue", angle=270)+
geom_vline(xintercept=16.725 ,  color="darkgreen")+
geom_text(mapping = aes(x = 17 ,
y = 8,
label = 'Median household income for the data'), colour="darkgreen", angle=270)+
labs(title  = "Annual Family Income for 2020 Democratic Trump Voters",x="The higher the number, the wealthier",y="")
#Age
#median(2020-vote_trump$birthyr)
#median(2020-demo_trump$birthyr)
#sum((2020-demo_trump$birthyr)<50)/sum(vote_trump$pid1r==2)
#sum((2020-vote_trump$birthyr)<50)/nrow(vote_trump)
demo_trump_age = data.frame(age=2020-demo_trump$birthyr)
all_trump_age = data.frame(age=2020-vote_trump$birthyr)
ggplot() +
aes(x = age) +
geom_histogram(data = demo_trump_age, fill = "blue",bins = 50,show.legend = T) +
geom_histogram(data = all_trump_age, fill = "pink",binwidth = 0.5)
#Gender
male<-sum(demo_trump$sex==1)/sum(vote_trump$pid1r==2)
#Education
edu_bachelor<-sum(demo_trump$educ>=5)/sum(vote_trump$pid1r==2)
#Children
at_least_one_child<-sum(demo_trump$children>=1)/sum(vote_trump$pid1r==2)
#Ethnicity
whitet<-sum(demo_trump$race1_white)
white_prop<-whitet/sum(vote_trump$pid1r==2)
demographic<-data.frame(
Feature = c("Male","Edu_bachelor","At_least_one_child","White_prop"),
Percentage=round(c(male,edu_bachelor,at_least_one_child,white_prop),2))
ggplot(demographic,aes(x=Feature,y=Percentage, fill=as.factor(Feature))) +
geom_bar(stat = "identity",width=0.8)+
coord_flip()+
scale_fill_hue(c = 40)+
theme(legend.position="none")+
geom_text(aes(label = Percentage), vjust=0)
#income
#nrow(demo_trump[demo_trump$inc_anes!=66,"inc_anes"])/sum(vote_trump$pid1r==2)
#colMeans(demo_trump[demo_trump$inc_anes!=66,"inc_anes"])
income_dis<-demo_trump[demo_trump$inc_anes!=66,"inc_anes"]
ggplot(income_dis, aes(x=inc_anes)) +
geom_histogram(binwidth=3, fill="#69b3a2", color="#e9ecef", alpha=0.9)+
geom_vline(xintercept=14.7,  color='darkblue')+
geom_text(mapping = aes(x = 15,
y = 8,
label = 'Median household income in 2019'), colour="darkblue", angle=270)+
geom_vline(xintercept=16.725 ,  color="darkgreen")+
geom_text(mapping = aes(x = 17 ,
y = 8,
label = 'Median household income for the data'), colour="darkgreen", angle=270)+
labs(title  = "Annual Family Income for 2020 Democratic Trump Voters",x="The higher the number, the wealthier",y="")
#expert
ggplot(as.data.frame(demo_trump$experts),
aes(x=as.factor(demo_trump$experts), fill=as.factor(demo_trump$experts) )) +
geom_bar( )+
scale_fill_brewer() +
labs(x = "The lower the number, the more they trust ordinary citizens",y="Number of people")+
theme(legend.position="none")
#Age
#median(2020-vote_trump$birthyr)
#median(2020-demo_trump$birthyr)
#sum((2020-demo_trump$birthyr)<50)/sum(vote_trump$pid1r==2)
#sum((2020-vote_trump$birthyr)<50)/nrow(vote_trump)
demo_trump_age = data.frame(age=2020-demo_trump$birthyr)
all_trump_age = data.frame(age=2020-vote_trump$birthyr)
ggplot() +
aes(x = age) +
geom_histogram(data = demo_trump_age, fill = "blue",bins = 50,show.legend = T) +
geom_histogram(data = all_trump_age, fill = "pink",binwidth = 0.5)
#Gender
male<-sum(demo_trump$sex==1)/sum(vote_trump$pid1r==2)
#Education
edu_bachelor<-sum(demo_trump$educ>=5)/sum(vote_trump$pid1r==2)
#Children
at_least_one_child<-sum(demo_trump$children>=1)/sum(vote_trump$pid1r==2)
#Ethnicity
whitet<-sum(demo_trump$race1_white)
white_prop<-whitet/sum(vote_trump$pid1r==2)
demographic<-data.frame(
Feature = c("Male","Edu_bachelor","At_least_one_child","White_prop"),
Percentage=round(c(male,edu_bachelor,at_least_one_child,white_prop),2))
ggplot(demographic,aes(x=Feature,y=Percentage, fill=as.factor(Feature))) +
geom_bar(stat = "identity",width=0.8)+
coord_flip()+
scale_fill_hue(c = 40)+
theme(legend.position="none")+
geom_text(aes(label = Percentage), vjust=0)
#income
#nrow(demo_trump[demo_trump$inc_anes!=66,"inc_anes"])/sum(vote_trump$pid1r==2)
#colMeans(demo_trump[demo_trump$inc_anes!=66,"inc_anes"])
income_dis<-demo_trump[demo_trump$inc_anes!=66,"inc_anes"]
ggplot(income_dis, aes(x=inc_anes)) +
geom_histogram(binwidth=3, fill="#69b3a2", color="#e9ecef", alpha=0.9)+
geom_vline(xintercept=14.7,  color='darkblue')+
geom_text(mapping = aes(x = 15,
y = 8,
label = 'Median household income in 2019'), colour="darkblue", angle=270)+
geom_vline(xintercept=16.725 ,  color="darkgreen")+
geom_text(mapping = aes(x = 17 ,
y = 8,
label = 'Median household income for the data'), colour="darkgreen", angle=270)+
labs(title  = "Annual Family Income for 2020 Democratic Trump Voters",x="The higher the number, the wealthier",y="")
#expert
ggplot(as.data.frame(demo_trump$experts),
aes(x=as.factor(demo_trump$experts), fill=as.factor(demo_trump$experts) )) +
geom_bar( )+
scale_fill_brewer() +
labs(x = "The lower the number, the more they trust ordinary citizens",y="Number of people")+
theme(legend.position="none")
vote_trump<-pilot_data_1[pilot_data_1$vote20jb==1,]
#sum(vote_trump$pid1r==2)
demo_trump<-vote_trump[vote_trump$pid1r==2,]
#sum(vote_trump$pid1r==2)/nrow(vote_trump)
#sum(vote_trump$pid1r==2)/sum(pilot_data_1$pid1r==2)
#demotrump <- rep("Democrats",sum(vote_trump$pid1r==2))
#trump<-rep("Others",nrow(vote_trump)-sum(vote_trump$pid1r==2))
parts1 <- c(10,90)
parts2 <- c(9,91)
w1<-waffle(parts1,rows=5,colors=c("light red","blue"),title =c("10% of Democrats vote for Trump"))
w2<-waffle(parts2,rows=5,colors=c("light blue","blue"),title =c("9% of Trump's voters come for Democrats"))
iron(w1,w2)
vote_trump<-pilot_data_1[pilot_data_1$vote20jb==1,]
#sum(vote_trump$pid1r==2)
demo_trump<-vote_trump[vote_trump$pid1r==2,]
#sum(vote_trump$pid1r==2)/nrow(vote_trump)
#sum(vote_trump$pid1r==2)/sum(pilot_data_1$pid1r==2)
#demotrump <- rep("Democrats",sum(vote_trump$pid1r==2))
#trump<-rep("Others",nrow(vote_trump)-sum(vote_trump$pid1r==2))
parts1 <- c(10,90)
parts2 <- c(9,91)
w1<-waffle(parts1,rows=5,colors=c("red","blue"),title =c("10% of Democrats vote for Trump"))
w2<-waffle(parts2,rows=5,colors=c("light blue","blue"),title =c("9% of Trump's voters come for Democrats"))
iron(w1,w2)
vote_trump<-pilot_data_1[pilot_data_1$vote20jb==1,]
#sum(vote_trump$pid1r==2)
demo_trump<-vote_trump[vote_trump$pid1r==2,]
#sum(vote_trump$pid1r==2)/nrow(vote_trump)
#sum(vote_trump$pid1r==2)/sum(pilot_data_1$pid1r==2)
#demotrump <- rep("Democrats",sum(vote_trump$pid1r==2))
#trump<-rep("Others",nrow(vote_trump)-sum(vote_trump$pid1r==2))
parts1 <- c(10,90)
parts2 <- c(9,91)
w1<-waffle(parts1,rows=5,colors=c("red","blue"),title =c("10% of Democrats vote for Trump"))
w2<-waffle(parts2,rows=5,colors=c("light blue","red"),title =c("9% of Trump's voters come for Democrats"))
iron(w1,w2)
